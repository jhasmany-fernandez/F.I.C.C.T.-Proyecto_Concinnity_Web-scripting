CREATE DATABASE CONCINNITY;
USE CONCINNITY;

DROP DATABASE CONCINNITY

CREATE TABLE PERSONAL(
	ID  INTEGER NOT NULL,
    CI INTEGER NOT NULL,
    NOMBRE VARCHAR (50) NOT NULL,
    SEXO CHAR NOT NULL,
    TELEFONO INTEGER NOT NULL,
    CORREO VARCHAR (30),
    DOMICILIO VARCHAR (60),
    PRIMARY KEY (ID)
);

insert into PERSONAL values(1,12820956, 'Carla Romina Cardozo Gallardo','F', 76521338,'Carla2Cardozo@gmail.com',null);
insert into PERSONAL values(2,15286978, 'Joaquin Torrez Mamani','M', 77859648,'JoaquinTorrz34@gmail.com',' Av. santos dumont');

CREATE TABLE ROL(
	ID VARCHAR(3) NOT NULL,
    NOMBRE VARCHAR (20) NOT NULL,
    PRIMARY KEY (ID)
);

insert into Rol values('ADM', 'Administrador');
insert into Rol values('VEN', 'Vendedor');

CREATE TABLE USUARIO(
	ID INTEGER NOT NULL,
    NOMBRE_USUARIO VARCHAR (20) NOT NULL,
    CONTRASEÑA VARCHAR (20) NOT NULL,
    ID_ROL VARCHAR(3) NOT NULL,
	ID_PERSONAL INTEGER NOT NULL,
    PRIMARY KEY (ID),
	FOREIGN KEY(ID_ROL) REFERENCES ROL(ID)
	ON DELETE NO ACTION
	ON UPDATE CASCADE,
	FOREIGN KEY(ID_PERSONAL) REFERENCES PERSONAL(ID)
	ON DELETE NO ACTION
	ON UPDATE CASCADE
);

insert into Usuario values(1,'Carla C.G.','12820956','ADM',1);
insert into Usuario values(2,'Torrez','torre*z','VEN',2);

CREATE TABLE BITACORA(
    ID_USUARIO INTEGER NOT NULL,
	ID INTEGER NOT NULL,
    FECHA_HORA DATETIME NOT NULL,
    ACCION VARCHAR (20),
    PRIMARY  KEY (ID, ID_USUARIO),
	FOREIGN KEY(ID_USUARIO) REFERENCES USUARIO(ID)
	ON DELETE NO ACTION
	ON UPDATE CASCADE
);

CREATE TABLE PROVEEDOR(
	ID INTEGER NOT NULL,
    NOMBRE VARCHAR  (50) NOT NULL,
    DIRECCION VARCHAR (60),
    TELEFONO INTEGER NOT NULL,
    CORREO VARCHAR (30) NOT NULL,
    PRIMARY KEY (ID)
);

insert into PROVEEDOR values(1,'SHEIN','China', 75456896, 'shain@gmail.com');
insert into PROVEEDOR values(2,'FASHION NOVA', 'EEUU', 69855221, 'fashionNova@gmail.com');
insert into PROVEEDOR values(3,'Lucrecia da Silva','Rio de Janeiro', 75456896, 'lucrecia2importa@gmail.com');

CREATE TABLE NOTA_COMPRA(
	ID INTEGER NOT NULL,
    FECHA_HORA datetime NOT NULL,
    MONTO_TOTAL INTEGER NOT NULL,
	ID_USUARIO INTEGER NOT NULL,
	ID_PROVEEDOR INTEGER NOT NULL,
	PRIMARY KEY (ID),
	FOREIGN KEY(ID_USUARIO) REFERENCES USUARIO(ID)
	ON DELETE NO ACTION
	ON UPDATE CASCADE,
	FOREIGN KEY(ID_PROVEEDOR) REFERENCES PROVEEDOR(ID)
	ON DELETE NO ACTION
	ON UPDATE CASCADE
);

insert into NOTA_COMPRA values(1, '2021/7/15 16:50:06 ', 2540,1,1);
insert into NOTA_COMPRA values(2, '2021/8/14 16:30:10 ', 900,1,3) ;
insert into NOTA_COMPRA values(3, '2021/9/25 6:30:35 ', 600,1,2) ;

CREATE TABLE CATEGORIA(
	ID INTEGER NOT NULL,
    NOMBRE VARCHAR (20) NOT NULL,
    PRIMARY KEY (ID)
);

insert into CATEGORIA values(1,'Vestido') ;
insert into CATEGORIA values(2,'Falda') ;
insert into CATEGORIA values(3,'Blusa') ;
insert into CATEGORIA values(4,'Short') ;
insert into CATEGORIA values(5,'Top') ;
insert into CATEGORIA values(6,'Enterizo') ;
insert into CATEGORIA values(7,'Blazer') ;
insert into CATEGORIA values(8,'Body') ;
insert into CATEGORIA values(9,'Pantalon') ;
insert into CATEGORIA values(10,'Accesorios') ;

CREATE TABLE MATERIAL(
	ID INTEGER NOT NULL,
    NOMBRE VARCHAR (20) NOT NULL,
    PRIMARY KEY (ID)
);

insert into MATERIAL values(1,'Algodon');
insert into MATERIAL values(2,'Cuero');
insert into MATERIAL values(3,'Satin');
insert into MATERIAL values(4,'Seda');
insert into MATERIAL values(5,'Jean');

CREATE TABLE MARCA(
	ID INTEGER NOT NULL,
    NOMBRE VARCHAR (20) NOT NULL,
    PRIMARY KEY (ID)
);

insert into MARCA values(1,'SHEIN');
insert into MARCA values(2,'FASHION NOVA');
insert into Marca values(3, 'COLORITTA');

CREATE TABLE TALLA(
	ID INTEGER NOT NULL,
	NOMBRE_TALLA VARCHAR(8) NOT NULL,
	PRIMARY KEY(ID)
);

INSERT INTO TALLA VALUES(1,'XS');
INSERT INTO TALLA VALUES(2,'S');
INSERT INTO TALLA VALUES(3,'M');
INSERT INTO TALLA VALUES(4,'L');
INSERT INTO TALLA VALUES(5,'XL');
INSERT INTO TALLA VALUES(6,'XXL');
INSERT INTO TALLA VALUES(7,'UNITALLA');

CREATE TABLE PRODUCTO(
	ID INTEGER NOT NULL,
    NOMBRE VARCHAR(40) NOT NULL,
	PRECIO DECIMAL NOT NULL,
    COSTO DECIMAL NOT NULL,
	OFERTA  DECIMAL NOT NULL,
	DESCRIPCION VARCHAR (50) NOT NULL,
	ID_CATEGORIA INTEGER NOT NULL,
	ID_MATERIAL INTEGER NOT NULL,
	ID_MARCA INTEGER NOT NULL,
    PRIMARY KEY (ID),
	FOREIGN KEY(ID_CATEGORIA) REFERENCES CATEGORIA(ID)
	ON DELETE NO ACTION
	ON UPDATE CASCADE,
	FOREIGN KEY(ID_MATERIAL) REFERENCES MATERIAL(ID)
	ON DELETE NO ACTION
	ON UPDATE CASCADE,
	FOREIGN KEY(ID_MARCA) REFERENCES MARCA(ID)
	ON DELETE NO ACTION
	ON UPDATE CASCADE
);

insert into producto values(1,'Cinturon', 100, 50, 0.30, 'cinturon negro de cuero', 10,2,1);
insert into producto values(2,'Vestido otoñal', 200, 100, 0, 'vestido corto con estampado de hojas',1,1,3);
insert into producto values(3,'Body casual', 140, 60,  0, 'body blanco con escote en V',8,1,2);
insert into producto values(4,'Short', 190, 80, 0, 'short negro a rayas',4,5,1);
insert into producto values(5,'Falda de porrista ', 120, 50, 0.50,'falda tableada color roja',2,4,1);

CREATE TABLE PRODUCTO_TALLA
(
	ID_PRODUCTO INTEGER NOT NULL,
	ID_TALLA INTEGER NOT NULL,
	STOCK INTEGER NOT NULL,
	PRIMARY KEY(ID_PRODUCTO, ID_TALLA),
	FOREIGN KEY(ID_PRODUCTO) REFERENCES PRODUCTO(ID)
	ON DELETE NO ACTION
	ON UPDATE CASCADE,
	FOREIGN KEY(ID_TALLA) REFERENCES TALLA(ID)
	ON DELETE NO ACTION
	ON UPDATE CASCADE
);

INSERT INTO PRODUCTO_TALLA VALUES(1,7,8);
INSERT INTO PRODUCTO_TALLA VALUES(2,1,8);
INSERT INTO PRODUCTO_TALLA VALUES(2,2,7);
INSERT INTO PRODUCTO_TALLA VALUES(3,3,10);
INSERT INTO PRODUCTO_TALLA VALUES(3,4,10);
INSERT INTO PRODUCTO_TALLA VALUES(4,5,4);
INSERT INTO PRODUCTO_TALLA VALUES(4,4,4);
INSERT INTO PRODUCTO_TALLA VALUES(5,2,6);
INSERT INTO PRODUCTO_TALLA VALUES(5,3,0);

CREATE TABLE DETALLE_NOTACOMPRA(
	ID_NOTACOMPRA INTEGER NOT NULL,
    ID_PRODUCTO INTEGER NOT NULL,
    ID_TALLA INTEGER NOT NULL,
    COSTO INTEGER NOT NULL,
    CANTIDAD INTEGER NOT NULL,
    IMPORTE INTEGER NOT NULL,
    PRIMARY KEY (ID_NOTACOMPRA, ID_PRODUCTO, ID_TALLA),
	FOREIGN KEY(ID_PRODUCTO, ID_TALLA) REFERENCES PRODUCTO_TALLA(ID_PRODUCTO, ID_TALLA)
	ON DELETE NO ACTION
	ON UPDATE CASCADE,
	FOREIGN KEY(ID_NOTACOMPRA) REFERENCES NOTA_COMPRA(ID)
	ON DELETE NO ACTION
	ON UPDATE CASCADE
);

insert into DETALLE_NOTACOMPRA values(1,1,7,50,8,400);
insert into DETALLE_NOTACOMPRA values(1,2,1,100,8,800);
insert into DETALLE_NOTACOMPRA values(1,2,2,100,7,700);
insert into DETALLE_NOTACOMPRA values(1,4,5,80,4,320);
insert into DETALLE_NOTACOMPRA values(1,4,4,80,4,320);
insert into DETALLE_NOTACOMPRA values(2,3,3,60,10,600);
insert into DETALLE_NOTACOMPRA values(2,5,2,50,6,300);
insert into DETALLE_NOTACOMPRA values(3,3,4,60,10,600);

CREATE TABLE NOTA_SALIDA(
	ID INTEGER NOT NULL,
    FECHA_HORA DATETIME NOT NULL,
    PRIMARY KEY (ID)
);

INSERT INTO NOTA_SALIDA VALUES(1,'2021/8/6 13:30:06');
INSERT INTO NOTA_SALIDA VALUES(2,'2021/10/14 08:30:25');

CREATE TABLE DETALLE_NOTASALIDA(
    ID_NOTASALIDA INTEGER NOT NULL,
    ID_PRODUCTO INTEGER NOT NULL,
	ID_TALLA INTEGER NOT NULL,
    CANTIDAD INTEGER NOT NULL,
    PRIMARY KEY (ID_PRODUCTO, ID_TALLA, ID_NOTASALIDA),
	FOREIGN KEY(ID_PRODUCTO, ID_TALLA) REFERENCES PRODUCTO_TALLA(ID_PRODUCTO, ID_TALLA)
	ON DELETE NO ACTION
	ON UPDATE CASCADE,
	FOREIGN KEY(ID_NOTASALIDA) REFERENCES NOTA_SALIDA(ID)
	ON DELETE NO ACTION
	ON UPDATE CASCADE
);

INSERT INTO DETALLE_NOTASALIDA VALUES(1,3,3,1);
INSERT INTO DETALLE_NOTASALIDA VALUES(1,1,7,2);
INSERT INTO DETALLE_NOTASALIDA VALUES(2,5,2,1);

CREATE TABLE CLIENTE(
	ID INTEGER NOT NULL,
    NOMBRE VARCHAR (50) NOT NULL,
    TELEFONO INTEGER NOT NULL,
    CORREO VARCHAR (40),
    PRIMARY KEY (ID)
);

INSERT INTO CLIENTE VALUES(1,'Melody Seña',77652189,'titoChumacero@gmail.com');
INSERT INTO CLIENTE VALUES(2,'Tatiana Torrez',75895621,'TaatianaTorrez@gmail.com');
INSERT INTO CLIENTE VALUES(3,'Yuliana Rodriguez',77895621,'YulianaRodriguez@gmail.com');
INSERT INTO CLIENTE VALUES(4,'Juliana Gomez',76589128,null);
INSERT INTO CLIENTE VALUES(5,'Samuel Vedia',78956328,'SamuelVedia@gmail.com');

CREATE TABLE NOTA_VENTA(
	ID INTEGER NOT NULL,
    FECHA_HORA DATETIME NOT NULL,
	MONTO_PAGO INTEGER NOT NULL,
    DESCUENTO INTEGER,
	MONTO_TOTAL INTEGER NOT NULL,
	ID_CLIENTE INTEGER NOT NULL,
	ID_USUARIO INTEGER NOT NULL,
    PRIMARY KEY (ID),
	FOREIGN KEY(ID_CLIENTE) REFERENCES CLIENTE(ID)
	ON DELETE NO ACTION
	ON UPDATE CASCADE,
	FOREIGN KEY(ID_USUARIO) REFERENCES USUARIO(ID)
	ON DELETE NO ACTION
	ON UPDATE CASCADE
);

INSERT INTO NOTA_VENTA VALUES(1,'2021/12/15 10:20:06',270,0,270,1,2);
INSERT INTO NOTA_VENTA VALUES(2,'2021/12/16 16:40',710,0.1,639,2,2);
INSERT INTO NOTA_VENTA VALUES(3,'2021/12/25 11:25',140,0,140,4,2);
INSERT INTO NOTA_VENTA VALUES(4,'2021/10/20 16:50:09',330,0.1,297,3,2);
INSERT INTO NOTA_VENTA VALUES(5,'2021/10/20 14:20',180,0,180,5,2);

CREATE TABLE DETALLE_NOTAVENTA(
	ID_NOTAVENTA INTEGER NOT NULL,
    ID_PRODUCTO INTEGER NOT NULL,
	ID_TALLA INTEGER NOT NULL,
	PRECIO INTEGER NOT NULL,
	CANTIDAD INTEGER NOT NULL,
	TOTAL INTEGER NOT NULL,
	PRIMARY KEY (ID_PRODUCTO, ID_TALLA, ID_NOTAVENTA),
	FOREIGN KEY(ID_PRODUCTO, ID_TALLA) REFERENCES PRODUCTO_TALLA(ID_PRODUCTO, ID_TALLA)
	ON DELETE NO ACTION
	ON UPDATE CASCADE,
	FOREIGN KEY(ID_NOTAVENTA) REFERENCES NOTA_VENTA(ID)
	ON DELETE NO ACTION
	ON UPDATE CASCADE
);

insert into DETALLE_NOTAVENTA values(1,1,7,70,1,70);
insert into DETALLE_NOTAVENTA values(1,2,1,200,1,200);
insert into DETALLE_NOTAVENTA values(2,4,5,190,2,380);
insert into DETALLE_NOTAVENTA values(2,5,2,60,1,60);
insert into DETALLE_NOTAVENTA values(2,1,7,70,3,210);
insert into DETALLE_NOTAVENTA values(3,3,4,140,1,140);
insert into DETALLE_NOTAVENTA values(4,4,4,190,1,190);
insert into DETALLE_NOTAVENTA values(4,3,4,140,1,140);
insert into DETALLE_NOTAVENTA values(5,5,2,60,3,180);

-- 1. Listar  los  nombres  de  las  personas  que  hicieron  una  compra  el  20  de  octubre  del 2021
SELECT CLIENTE.NOMBRE
FROM NOTA_VENTA, CLIENTE
WHERE NOTA_VENTA.ID_CLIENTE=CLIENTE.ID AND NOTA_VENTA.FECHA_HORA BETWEEN '00:00:00 2021/10/20' AND '23:59:59 2021/10/20'
-- 2. Listar  las  personas  que  no  tienen  CI
SELECT PERSONAL.NOMBRE
FROM PERSONAL
WHERE CI=NULL
-- 3. Listar las personas que hicieron más de 3 compras
SELECT CLIENTE.NOMBRE, COUNT(NOTA_VENTA.ID_CLIENTE) AS CANTIDAD_DE_COMPRAS
FROM CLIENTE, NOTA_VENTA
WHERE CLIENTE.ID=NOTA_VENTA.ID_CLIENTE
GROUP BY CLIENTE.NOMBRE
HAVING COUNT(NOTA_VENTA.ID_CLIENTE)>3
-- 4. Listar las productos de la nota de compra que fueron ingresados desde el 01 de julio del 2021 hasta el 30 de agosto de 2021
SELECT DISTINCT PRODUCTO.NOMBRE
FROM NOTA_COMPRA, DETALLE_NOTACOMPRA, PRODUCTO_TALLA, PRODUCTO
WHERE NOTA_COMPRA.ID=DETALLE_NOTACOMPRA.ID_NOTACOMPRA AND DETALLE_NOTACOMPRA.ID_PRODUCTO=PRODUCTO_TALLA.ID_PRODUCTO
AND PRODUCTO_TALLA.ID_PRODUCTO=PRODUCTO.ID AND NOTA_COMPRA.FECHA_HORA BETWEEN '00:00:00 2021/07/01' AND '23:59:59 2021/08/30'

-- 5. Listar las personas que aún no hicieron compras en el tienda
SELECT CLIENTE.NOMBRE
FROM CLIENTE
WHERE CLIENTE.ID NOT IN (SELECT NOTA_VENTA.ID_CLIENTE FROM NOTA_VENTA)

-- 6. Mostrar la mínima cantidad que nos suministró el proveedor FASHION NOVA
 SELECT MIN(DETALLE_NOTACOMPRA.CANTIDAD)
 FROM PROVEEDOR, NOTA_COMPRA, DETALLE_NOTACOMPRA
 WHERE PROVEEDOR.ID=NOTA_COMPRA.ID_PROVEEDOR AND NOTA_COMPRA.ID=DETALLE_NOTACOMPRA.ID_NOTACOMPRA AND PROVEEDOR.NOMBRE='FASHION NOVA'

-- 7. Mostrar los nombres de los productos de la nota de salida de 2021/10/14
SELECT DISTINCT PRODUCTO.NOMBRE
FROM NOTA_SALIDA, DETALLE_NOTASALIDA, PRODUCTO_TALLA, PRODUCTO
WHERE NOTA_SALIDA.ID=DETALLE_NOTASALIDA.ID_NOTASALIDA AND DETALLE_NOTASALIDA.ID_PRODUCTO=PRODUCTO_TALLA.ID_PRODUCTO 
AND PRODUCTO_TALLA.ID_PRODUCTO=PRODUCTO.ID AND NOTA_SALIDA.FECHA_HORA BETWEEN '00:00:00 2021/10/14' AND '23:59:59 2021/10/14'

-- 8. Mostrar el mayor monto_total ingresado por una nota de venta
SELECT MAX(NOTA_VENTA.MONTO_TOTAL)
FROM NOTA_VENTA
 
-- 9. Mostrar todos los nombres y precios de los productos de la categoria falda
SELECT PRODUCTO.NOMBRE, PRODUCTO.PRECIO
FROM CATEGORIA, PRODUCTO 
WHERE CATEGORIA.ID=PRODUCTO.ID_CATEGORIA AND CATEGORIA.NOMBRE='Falda'

-- 10. Mostrar todos los nombres y precios de los productos de la marca coloritta y material de jean
SELECT PRODUCTO.NOMBRE, PRODUCTO.PRECIO
FROM MARCA, MATERIAL, PRODUCTO
WHERE MARCA.ID=PRODUCTO.ID_MARCA AND MATERIAL.ID=PRODUCTO.ID_MATERIAL AND MARCA.NOMBRE='coloritta' AND MATERIAL.NOMBRE='jean'

-- 11. Mostrar todas las notas de ventas que compraronc los productos de material de cuero
SELECT NOTA_VENTA.*
FROM  NOTA_VENTA, DETALLE_NOTAVENTA, PRODUCTO_TALLA, PRODUCTO, MATERIAL
WHERE NOTA_VENTA.ID= DETALLE_NOTAVENTA.ID_NOTAVENTA AND DETALLE_NOTAVENTA.ID_PRODUCTO=PRODUCTO_TALLA.ID_PRODUCTO 
AND PRODUCTO_TALLA.ID_PRODUCTO=PRODUCTO.ID AND PRODUCTO.ID_MATERIAL=MATERIAL.ID AND MATERIAL.NOMBRE='cuero' 
-- 12. Listar los clientes que compraron productos con el monto total mayor a 200
SELECT CLIENTE.NOMBRE
FROM CLIENTE, NOTA_VENTA
WHERE CLIENTE.ID=NOTA_VENTA.ID_CLIENTE AND NOTA_VENTA.MONTO_TOTAL>200

--13. Listar los productos vendidos al cliente 1.
SELECT DISTINCT PRODUCTO.NOMBRE
FROM CLIENTE, NOTA_VENTA, DETALLE_NOTAVENTA, PRODUCTO_TALLA, PRODUCTO
WHERE CLIENTE.ID= NOTA_VENTA.ID_CLIENTE AND NOTA_VENTA.ID=DETALLE_NOTAVENTA.ID_NOTAVENTA AND DETALLE_NOTAVENTA.ID_PRODUCTO=PRODUCTO_TALLA.ID_PRODUCTO
AND PRODUCTO_TALLA.ID_PRODUCTO=PRODUCTO.ID AND CLIENTE.ID=1

--14. Ver las compras hechas al prooveedor 2
SELECT *
FROM NOTA_COMPRA
WHERE NOTA_COMPRA.ID_PROVEEDOR IN (SELECT PROVEEDOR.ID FROM PROVEEDOR WHERE PROVEEDOR.ID=2)

--15. Ver el producto con mas stock en la tienda


SELECT * FROM PRODUCTO_TALLA
SELECT * FROM PRODUCTO
--16. Ver el producto con menor stock en la tienda 


--17. Mostrar los nombres de cada personal y el rol que cumplen
SELECT PERSONAL.NOMBRE, ROL.NOMBRE
FROM PERSONAL, USUARIO, ROL
WHERE PERSONAL.ID=USUARIO.ID_PERSONAL AND USUARIO.ID_ROL=ROL.ID
GROUP BY PERSONAL.NOMBRE, ROL.NOMBRE

--18. Mostrar la suma total del importe comprado al prooveedor 2.
SELECT SUM(DETALLE_NOTACOMPRA.IMPORTE) AS SUMA_TOTAL_DEL_IMPORTE
FROM PROVEEDOR, NOTA_COMPRA, DETALLE_NOTACOMPRA
WHERE PROVEEDOR.ID=NOTA_COMPRA.ID_PROVEEDOR AND NOTA_COMPRA.ID=DETALLE_NOTACOMPRA.ID_NOTACOMPRA AND PROVEEDOR.ID=2
--19. Mostrar al vendedor con mas ventas


--20. Mostrar al vendedor con menos ventas

