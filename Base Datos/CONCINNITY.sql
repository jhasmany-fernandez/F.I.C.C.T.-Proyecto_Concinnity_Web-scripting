CREATE DATABASE CONCINNITY;
USE CONCINNITY;

DROP DATABASE CONCINNITY

CREATE TABLE PERSONAL(
	ID  INTEGER NOT NULL,
    CI INTEGER NOT NULL,
    NOMBRE VARCHAR (50) NOT NULL,
    SEXO CHAR NOT NULL,
    TELEFONO INTEGER NOT NULL,
    CORREO VARCHAR (30),
    DOMICILIO VARCHAR (60),
    PRIMARY KEY (ID)
);

insert into PERSONAL values(1,12820956, 'Carla Romina Cardozo Gallardo','F', 76521338,'Carla2Cardozo@gmail.com',null);
insert into PERSONAL values(2,15286978, 'Joaquin Torrez Mamani','M', 77859648,'JoaquinTorrz34@gmail.com',' Av. santos dumont');
insert into PERSONAL values(3,33456321, 'Luciana Barroso','F', 78645192,'Luciana_work@gmail.com',null);
insert into PERSONAL values(4,45678904, 'Hugo Torrez Mamani','M', 77569845,'Garciahugo@gmail.com','Plan 3000');

select *from PERSONAL;

CREATE TABLE ROL(
	ID VARCHAR(3) NOT NULL,
    NOMBRE VARCHAR (20) NOT NULL,
    PRIMARY KEY (ID)
);

insert into Rol values('ADM', 'Administrador');
insert into Rol values('VEN', 'Vendedor');
CREATE TABLE USUARIO(
	ID INTEGER NOT NULL,
    NOMBRE_USUARIO VARCHAR (20) NOT NULL,
    CONTRASEÑA VARCHAR (20) NOT NULL,
    ID_ROL VARCHAR(3) NOT NULL,
	ID_PERSONAL INTEGER NOT NULL,
    PRIMARY KEY (ID),
	FOREIGN KEY(ID_ROL) REFERENCES ROL(ID)
	ON DELETE NO ACTION
	ON UPDATE CASCADE,
	FOREIGN KEY(ID_PERSONAL) REFERENCES PERSONAL(ID)
	ON DELETE NO ACTION
	ON UPDATE CASCADE
);

insert into Usuario values(1,'Carla C.G.','12820956','ADM',1);
insert into Usuario values(2,'Torrez','torre*z','VEN',2);
insert into USUARIO values(3,'lucianita.','78645192','VEN',3);
insert into USUARIO values(4,'Hugo Torr3z','benny34','VEN',4);

CREATE TABLE BITACORA(
    ID_USUARIO INTEGER NOT NULL,
	ID INTEGER NOT NULL,
    FECHA_HORA DATETIME NOT NULL,
    ACCION VARCHAR (20),
    PRIMARY  KEY (ID, ID_USUARIO),
	FOREIGN KEY(ID_USUARIO) REFERENCES USUARIO(ID)
	ON DELETE NO ACTION
	ON UPDATE CASCADE
);
CREATE TABLE PROVEEDOR(
	ID INTEGER NOT NULL,
    NOMBRE VARCHAR  (50) NOT NULL,
    DIRECCION VARCHAR (60),
    TELEFONO INTEGER NOT NULL,
    CORREO VARCHAR (30) NOT NULL,
    PRIMARY KEY (ID)
);

insert into PROVEEDOR values(1,'SHEIN','China', 75456896, 'shain@gmail.com');
insert into PROVEEDOR values(2,'FASHION NOVA', 'EEUU', 69855221, 'fashionNova@gmail.com');
insert into PROVEEDOR values(3,'Lucrecia da Silva','Rio de Janeiro', 75456896, 'lucrecia2importa@gmail.com');

CREATE TABLE NOTA_COMPRA(
	ID INTEGER NOT NULL,
    FECHA_HORA DATETIME NOT NULL,
    MONTO_TOTAL DECIMAL(8,2) NOT NULL,
	ID_USUARIO INTEGER NOT NULL,
	ID_PROVEEDOR INTEGER NOT NULL,
	PRIMARY KEY (ID),
	FOREIGN KEY(ID_USUARIO) REFERENCES USUARIO(ID)
	ON DELETE NO ACTION
	ON UPDATE CASCADE,
	FOREIGN KEY(ID_PROVEEDOR) REFERENCES PROVEEDOR(ID)
	ON DELETE NO ACTION
	ON UPDATE CASCADE
);

insert into NOTA_COMPRA values(1, '16:50:06 15/7/2021', 2540,1,1);
insert into NOTA_COMPRA values(2, '16:30:10 14/08/2021', 900,1,3) ;
insert into NOTA_COMPRA values(3, '6:30:35 25/09/2021', 600,1,2) ;
insert into NOTA_COMPRA values(4, '20:30:00 25/09/2021', 870,1,1) ;
insert into NOTA_COMPRA values(5, '11:00:00 14/10/2021', 1800,1,1) ;
insert into NOTA_COMPRA values(6, '8:30:00 25/10/2021', 1420,1,2) ;

select *from NOTA_COMPRA

CREATE TABLE CATEGORIA(
	ID INTEGER NOT NULL,
    NOMBRE VARCHAR (20) NOT NULL,
    PRIMARY KEY (ID)
);

insert into CATEGORIA values(1,'Vestido') ;
insert into CATEGORIA values(2,'Falda') ;
insert into CATEGORIA values(3,'Blusa') ;
insert into CATEGORIA values(4,'Short') ;
insert into CATEGORIA values(5,'Top') ;
insert into CATEGORIA values(6,'Enterizo') ;
insert into CATEGORIA values(7,'Blazer') ;
insert into CATEGORIA values(8,'Body') ;
insert into CATEGORIA values(9,'Pantalon') ;
insert into CATEGORIA values(10,'Accesorios') ;

CREATE TABLE MATERIAL(
	ID INTEGER NOT NULL,
    NOMBRE VARCHAR (20) NOT NULL,
    PRIMARY KEY (ID)
);

insert into MATERIAL values(1,'Algodon');
insert into MATERIAL values(2,'Cuero');
insert into MATERIAL values(3,'Satin');
insert into MATERIAL values(4,'Seda');
insert into MATERIAL values(5,'Jean');

CREATE TABLE MARCA(
	ID INTEGER NOT NULL,
    NOMBRE VARCHAR (20) NOT NULL,
    PRIMARY KEY (ID)
);

insert into MARCA values(1,'SHEIN');
insert into MARCA values(2,'FASHION NOVA');
insert into Marca values(3, 'COLORITTA');

CREATE TABLE TALLA(
	ID INTEGER NOT NULL,
	NOMBRE_TALLA VARCHAR(8) NOT NULL,
	PRIMARY KEY(ID)
);

INSERT INTO TALLA VALUES(1,'XS');
INSERT INTO TALLA VALUES(2,'S');
INSERT INTO TALLA VALUES(3,'M');
INSERT INTO TALLA VALUES(4,'L');
INSERT INTO TALLA VALUES(5,'XL');
INSERT INTO TALLA VALUES(6,'XXL');
INSERT INTO TALLA VALUES(7,'UNITALLA');

CREATE TABLE PRODUCTO(
	ID INTEGER NOT NULL,
    NOMBRE VARCHAR(40) NOT NULL,
	PRECIO DECIMAL(6,2) NOT NULL,
    COSTO DECIMAL(6,2) NOT NULL,
	OFERTA  DECIMAL(3,2),
	DESCRIPCION VARCHAR (50) NOT NULL,
	ID_CATEGORIA INTEGER NOT NULL,
	ID_MATERIAL INTEGER NOT NULL,
	ID_MARCA INTEGER NOT NULL,
    PRIMARY KEY (ID),
	FOREIGN KEY(ID_CATEGORIA) REFERENCES CATEGORIA(ID)
	ON DELETE NO ACTION
	ON UPDATE CASCADE,
	FOREIGN KEY(ID_MATERIAL) REFERENCES MATERIAL(ID)
	ON DELETE NO ACTION
	ON UPDATE CASCADE,
	FOREIGN KEY(ID_MARCA) REFERENCES MARCA(ID)
	ON DELETE NO ACTION
	ON UPDATE CASCADE
);

insert into producto values(1,'Cinturon', 100, 50, 0.30, 'cinturon negro de cuero', 10,2,1);
insert into producto values(2,'Vestido otoñal', 200, 100, null, 'vestido corto con estampado de hojas',1,1,3);
insert into producto values(3,'Body casual', 140, 60,  null, 'body blanco con escote en V',8,1,2);
insert into producto values(4,'Short', 190, 80, null, 'short negro a rayas',4,5,1);
insert into producto values(5,'Falda de porrista ', 120, 50, 0.50,'falda tableada color roja',2,4,1);
insert into producto values(6,'Falda Coreana',80, 40, null, 'falda a cuadross rojo y negro', 2,2,1);
insert into producto values(7,'Vestido Vintage', 200, 90, null, 'Vestido largo, color crema, sin mangas', 1,3,2);
insert into producto values(8,'Camisa Riele', 100, 50, null, 'camisa blanca de tres botones y manga larga', 3,4,3);
insert into producto values(9,'Pantalos mom', 210, 80, 0.10, 'Pantalon jim, color claro, a la cintura', 9,5,2);
insert into producto values(10,'Falda Zarbe', 80, 50, null, 'falda negra ', 2,2,2);
insert into producto values(11,'Mono corto cati',150, 60, null, 'enterizo rojo, hasta las rodillas', 6,1,3);
insert into producto values(12,'Top Edel', 70, 30, 0.20, 'top  azul claro con cuello en v', 5,3,1);

CREATE TABLE PRODUCTO_TALLA
(
	ID_PRODUCTO INTEGER NOT NULL,
	ID_TALLA INTEGER NOT NULL,
	STOCK INTEGER NOT NULL,
	PRIMARY KEY(ID_PRODUCTO, ID_TALLA),
	FOREIGN KEY(ID_PRODUCTO) REFERENCES PRODUCTO(ID)
	ON DELETE NO ACTION
	ON UPDATE CASCADE,
	FOREIGN KEY(ID_TALLA) REFERENCES TALLA(ID)
	ON DELETE NO ACTION
	ON UPDATE CASCADE
);

INSERT INTO PRODUCTO_TALLA VALUES(1,7,8);
INSERT INTO PRODUCTO_TALLA VALUES(2,1,8);
INSERT INTO PRODUCTO_TALLA VALUES(2,2,7);
INSERT INTO PRODUCTO_TALLA VALUES(3,3,10);
INSERT INTO PRODUCTO_TALLA VALUES(3,4,10);
INSERT INTO PRODUCTO_TALLA VALUES(4,5,4);
INSERT INTO PRODUCTO_TALLA VALUES(4,4,4);
INSERT INTO PRODUCTO_TALLA VALUES(5,2,6);
INSERT INTO PRODUCTO_TALLA VALUES(5,3,0);
INSERT INTO PRODUCTO_TALLA VALUES(6,2,8);
INSERT INTO PRODUCTO_TALLA VALUES(7,3,10);
INSERT INTO PRODUCTO_TALLA VALUES(8,5,6);
INSERT INTO PRODUCTO_TALLA VALUES(8,4,6);
INSERT INTO PRODUCTO_TALLA VALUES(9,2,7);
INSERT INTO PRODUCTO_TALLA VALUES(9,3,7);
INSERT INTO PRODUCTO_TALLA VALUES(10,3,6);
INSERT INTO PRODUCTO_TALLA VALUES(10,2,5);
INSERT INTO PRODUCTO_TALLA VALUES(11,3,5);
INSERT INTO PRODUCTO_TALLA VALUES(12,2,10);

CREATE TABLE DETALLE_NOTACOMPRA(
	ID_NOTACOMPRA INTEGER NOT NULL,
    ID_PRODUCTO INTEGER NOT NULL,
    ID_TALLA INTEGER NOT NULL,
    COSTO DECIMAL(6,2) NOT NULL,
    CANTIDAD INTEGER NOT NULL,
    IMPORTE DECIMAL(7,2) NOT NULL,
    PRIMARY KEY (ID_NOTACOMPRA, ID_PRODUCTO, ID_TALLA),
	FOREIGN KEY(ID_PRODUCTO, ID_TALLA) REFERENCES PRODUCTO_TALLA(ID_PRODUCTO, ID_TALLA)
	ON DELETE NO ACTION
	ON UPDATE CASCADE,
	FOREIGN KEY(ID_NOTACOMPRA) REFERENCES NOTA_COMPRA(ID)
	ON DELETE NO ACTION
	ON UPDATE CASCADE
);

insert into DETALLE_NOTACOMPRA values(1,1,7,50,8,400);
insert into DETALLE_NOTACOMPRA values(1,2,1,100,8,800);
insert into DETALLE_NOTACOMPRA values(1,2,2,100,7,700);
insert into DETALLE_NOTACOMPRA values(1,4,5,80,4,320);
insert into DETALLE_NOTACOMPRA values(1,4,4,80,4,320);
insert into DETALLE_NOTACOMPRA values(2,3,3,60,10,600);
insert into DETALLE_NOTACOMPRA values(2,5,2,50,6,300);
insert into DETALLE_NOTACOMPRA values(3,3,4,60,10,600);
insert into DETALLE_NOTACOMPRA values(4,6,2,40,8,320);
insert into DETALLE_NOTACOMPRA values(4,10,3,50,6,300);
insert into DETALLE_NOTACOMPRA values(4,10,2,50,5,250);
insert into DETALLE_NOTACOMPRA values(5,7,3,90,10,900);
insert into DETALLE_NOTACOMPRA values(5,8,5,50,6,300);
insert into DETALLE_NOTACOMPRA values(5,8,4,50,6,300);
insert into DETALLE_NOTACOMPRA values(5,12,2,30,10,300);
insert into DETALLE_NOTACOMPRA values(6,11,3,60,5,300);
insert into DETALLE_NOTACOMPRA values(6,9,2,80,7,560);
insert into DETALLE_NOTACOMPRA values(6,9,3,80,7,560);

CREATE TABLE NOTA_SALIDA(
	ID INTEGER NOT NULL,
    FECHA_HORA DATETIME NOT NULL,
    PRIMARY KEY (ID)
);

INSERT INTO NOTA_SALIDA VALUES(1,'13:30:06 06/08/2021');
INSERT INTO NOTA_SALIDA VALUES(2,'08:30:25 14/10/2021');

SELECT *FROM NOTA_SALIDA;

CREATE TABLE DETALLE_NOTASALIDA(
    ID_NOTASALIDA INTEGER NOT NULL,
    ID_PRODUCTO INTEGER NOT NULL,
	ID_TALLA INTEGER NOT NULL,
    CANTIDAD INTEGER NOT NULL,
    PRIMARY KEY (ID_PRODUCTO, ID_TALLA, ID_NOTASALIDA),
	FOREIGN KEY(ID_PRODUCTO, ID_TALLA) REFERENCES PRODUCTO_TALLA(ID_PRODUCTO, ID_TALLA)
	ON DELETE NO ACTION
	ON UPDATE CASCADE,
	FOREIGN KEY(ID_NOTASALIDA) REFERENCES NOTA_SALIDA(ID)
	ON DELETE NO ACTION
	ON UPDATE CASCADE
);

INSERT INTO DETALLE_NOTASALIDA VALUES(1,3,3,1);
INSERT INTO DETALLE_NOTASALIDA VALUES(1,1,7,2);
INSERT INTO DETALLE_NOTASALIDA VALUES(2,5,2,1);

CREATE TABLE CLIENTE(
	ID INTEGER NOT NULL,
    NOMBRE VARCHAR (50) NOT NULL,
    TELEFONO INTEGER NOT NULL,
    CORREO VARCHAR (40),
    PRIMARY KEY (ID)
);

INSERT INTO CLIENTE VALUES(1,'Melody Seña',77652189,'titoChumacero@gmail.com');
INSERT INTO CLIENTE VALUES(2,'Tatiana Torrez',75895621,'TaatianaTorrez@gmail.com');
INSERT INTO CLIENTE VALUES(3,'Yuliana Rodriguez',77895621,'YulianaRodriguez@gmail.com');
INSERT INTO CLIENTE VALUES(4,'Juliana Gomez',76589128,null);
INSERT INTO CLIENTE VALUES(5,'Samuel Vedia',78956328,'SamuelVedia@gmail.com');

CREATE TABLE NOTA_VENTA(
	ID INTEGER NOT NULL,
    FECHA_HORA DATETIME NOT NULL,
	MONTO_PAGO DECIMAL(8,2) NOT NULL,
    DESCUENTO DECIMAL(3,2),
	MONTO_TOTAL DECIMAL(8,2) NOT NULL,
	ID_CLIENTE INTEGER NOT NULL,
	ID_USUARIO INTEGER NOT NULL,
    PRIMARY KEY (ID),
	FOREIGN KEY(ID_CLIENTE) REFERENCES CLIENTE(ID)
	ON DELETE NO ACTION
	ON UPDATE CASCADE,
	FOREIGN KEY(ID_USUARIO) REFERENCES USUARIO(ID)
	ON DELETE NO ACTION
	ON UPDATE CASCADE
);

INSERT INTO NOTA_VENTA VALUES(1,'10:20:06 15/12/2021',270,0,270,1,2);
INSERT INTO NOTA_VENTA VALUES(2,'16:40 16/12/2021',710,0.1,639,2,2);
INSERT INTO NOTA_VENTA VALUES(3,'11:25 25/12/2021',140,0,140,4,2);
INSERT INTO NOTA_VENTA VALUES(4,'16:50:09 20/10/2021',330,0.1,297,3,2);
INSERT INTO NOTA_VENTA VALUES(5,'14:20 20/10/2021',180,0,180,5,2);

SELECT *FROM NOTA_VENTA;

CREATE TABLE DETALLE_NOTAVENTA(
	ID_NOTAVENTA INTEGER NOT NULL,
    ID_PRODUCTO INTEGER NOT NULL,
	ID_TALLA INTEGER NOT NULL,
	PRECIO DECIMAL(6,2) NOT NULL,
	CANTIDAD INTEGER NOT NULL,
	TOTAL DECIMAL(7,2) NOT NULL,
	PRIMARY KEY (ID_PRODUCTO, ID_TALLA, ID_NOTAVENTA),
	FOREIGN KEY(ID_PRODUCTO, ID_TALLA) REFERENCES PRODUCTO_TALLA(ID_PRODUCTO, ID_TALLA)
	ON DELETE NO ACTION
	ON UPDATE CASCADE,
	FOREIGN KEY(ID_NOTAVENTA) REFERENCES NOTA_VENTA(ID)
	ON DELETE NO ACTION
	ON UPDATE CASCADE
);

insert into DETALLE_NOTAVENTA values(1,1,7,70,1,70);
insert into DETALLE_NOTAVENTA values(1,2,1,200,1,200);
insert into DETALLE_NOTAVENTA values(2,4,5,190,2,380);
insert into DETALLE_NOTAVENTA values(2,5,2,60,1,60);
insert into DETALLE_NOTAVENTA values(2,1,7,70,3,210);
insert into DETALLE_NOTAVENTA values(3,3,4,140,1,140);
insert into DETALLE_NOTAVENTA values(4,4,4,190,1,190);
insert into DETALLE_NOTAVENTA values(4,3,4,140,1,140);
insert into DETALLE_NOTAVENTA values(5,5,2,60,3,180);

-- 1. Listar  los  nombres  de  las  personas  que  hicieron  una  compra  el  20  de  octubre  del 2021
SELECT CLIENTE.NOMBRE
FROM NOTA_VENTA, CLIENTE
WHERE NOTA_VENTA.ID_CLIENTE=CLIENTE.ID AND NOTA_VENTA.FECHA_HORA BETWEEN '00:00:00 2021/10/20' AND '23:59:59 2021/10/20'

-- 2. Listar  el personal  que  no  tienen  correo
SELECT PERSONAL.NOMBRE
FROM PERSONAL
WHERE CORREO=NULL

-- 3. Listar las personas que hicieron más de 3 compras
SELECT CLIENTE.NOMBRE, COUNT(NOTA_VENTA.ID_CLIENTE) AS CANTIDAD_DE_COMPRAS
FROM CLIENTE, NOTA_VENTA
WHERE CLIENTE.ID=NOTA_VENTA.ID_CLIENTE
GROUP BY CLIENTE.NOMBRE
HAVING COUNT(NOTA_VENTA.ID_CLIENTE)>3

-- 4. Listar las productos de la nota de compra que fueron ingresados desde el 01 de julio del 2021 hasta el 30 de agosto de 2021
SELECT DISTINCT PRODUCTO.NOMBRE
FROM NOTA_COMPRA, DETALLE_NOTACOMPRA, PRODUCTO_TALLA, PRODUCTO
WHERE NOTA_COMPRA.ID=DETALLE_NOTACOMPRA.ID_NOTACOMPRA AND DETALLE_NOTACOMPRA.ID_PRODUCTO=PRODUCTO_TALLA.ID_PRODUCTO
AND PRODUCTO_TALLA.ID_PRODUCTO=PRODUCTO.ID AND NOTA_COMPRA.FECHA_HORA BETWEEN '00:00:00 2021/07/01' AND '23:59:59 2021/08/30'

-- 5. Listar al personal que aún no hicieron registraron las notas de venta en el tienda
SELECT *
FROM PERSONAL
WHERE PERSONAL.ID NOT IN(SELECT USUARIO.ID_PERSONAL FROM USUARIO, NOTA_VENTA WHERE USUARIO.ID=NOTA_VENTA.ID_USUARIO)

-- 6. Mostrar la mínima cantidad que nos suministró el proveedor FASHION NOVA
 SELECT MIN(DETALLE_NOTACOMPRA.CANTIDAD)
 FROM PROVEEDOR, NOTA_COMPRA, DETALLE_NOTACOMPRA
 WHERE PROVEEDOR.ID=NOTA_COMPRA.ID_PROVEEDOR AND NOTA_COMPRA.ID=DETALLE_NOTACOMPRA.ID_NOTACOMPRA AND PROVEEDOR.NOMBRE='FASHION NOVA'

-- 7. Mostrar los nombres de los productos de la nota de salida de 2021/10/14
SELECT DISTINCT PRODUCTO.NOMBRE
FROM NOTA_SALIDA, DETALLE_NOTASALIDA, PRODUCTO_TALLA, PRODUCTO
WHERE NOTA_SALIDA.ID=DETALLE_NOTASALIDA.ID_NOTASALIDA AND DETALLE_NOTASALIDA.ID_PRODUCTO=PRODUCTO_TALLA.ID_PRODUCTO
AND PRODUCTO_TALLA.ID_PRODUCTO=PRODUCTO.ID AND NOTA_SALIDA.FECHA_HORA BETWEEN '00:00:00 2021/10/14' AND '23:59:59 2021/10/14'

-- 8. Mostrar el mayor monto_total ingresado por una nota de venta
SELECT MAX(NOTA_VENTA.MONTO_TOTAL)
FROM NOTA_VENTA

-- 9. Mostrar todos los nombres y precios de los productos de la categoria falda
SELECT PRODUCTO.NOMBRE, PRODUCTO.PRECIO
FROM CATEGORIA, PRODUCTO
WHERE CATEGORIA.ID=PRODUCTO.ID_CATEGORIA AND CATEGORIA.NOMBRE='Falda'

-- 10. Mostrar todos los nombres y precios de los productos de la marca coloritta y material de jean
SELECT PRODUCTO.NOMBRE, PRODUCTO.PRECIO
FROM MARCA, MATERIAL, PRODUCTO
WHERE MARCA.ID=PRODUCTO.ID_MARCA AND MATERIAL.ID=PRODUCTO.ID_MATERIAL AND MARCA.NOMBRE='coloritta' AND MATERIAL.NOMBRE='jean'

-- 11. Mostrar todas las notas de ventas que compraronc los productos de material de cuero
SELECT NOTA_VENTA.*
FROM  NOTA_VENTA, DETALLE_NOTAVENTA, PRODUCTO_TALLA, PRODUCTO, MATERIAL
WHERE NOTA_VENTA.ID= DETALLE_NOTAVENTA.ID_NOTAVENTA AND DETALLE_NOTAVENTA.ID_PRODUCTO=PRODUCTO_TALLA.ID_PRODUCTO
AND PRODUCTO_TALLA.ID_PRODUCTO=PRODUCTO.ID AND PRODUCTO.ID_MATERIAL=MATERIAL.ID AND MATERIAL.NOMBRE='cuero'
-- 12. Listar los clientes que compraron productos con el monto total mayor a 200
SELECT CLIENTE.NOMBRE
FROM CLIENTE, NOTA_VENTA
WHERE CLIENTE.ID=NOTA_VENTA.ID_CLIENTE AND NOTA_VENTA.MONTO_TOTAL>200

--13. Listar los productos vendidos al cliente 1.
SELECT DISTINCT PRODUCTO.NOMBRE
FROM CLIENTE, NOTA_VENTA, DETALLE_NOTAVENTA, PRODUCTO_TALLA, PRODUCTO
WHERE CLIENTE.ID= NOTA_VENTA.ID_CLIENTE AND NOTA_VENTA.ID=DETALLE_NOTAVENTA.ID_NOTAVENTA AND DETALLE_NOTAVENTA.ID_PRODUCTO=PRODUCTO_TALLA.ID_PRODUCTO
AND PRODUCTO_TALLA.ID_PRODUCTO=PRODUCTO.ID AND CLIENTE.ID=1

--14. Ver las compras hechas al prooveedor 2
SELECT *
FROM NOTA_COMPRA
WHERE NOTA_COMPRA.ID_PROVEEDOR IN (SELECT PROVEEDOR.ID FROM PROVEEDOR WHERE PROVEEDOR.ID=2)

--15. Mostrar el mínimo monto total que pagó la cliente Yuliana Rodriguez
SELECT MIN(MONTO_TOTAL) AS MONTO_TOTAL
FROM NOTA_VENTA
WHERE NOTA_VENTA.ID_CLIENTE IN (SELECT CLIENTE.ID FROM CLIENTE WHERE CLIENTE.NOMBRE='Yuliana Rodriguez')

--16. Mostrar el stock del producto Falda de porrista por talla en la tienda
SELECT PRODUCTO_TALLA.STOCK, TALLA.NOMBRE_TALLA
FROM PRODUCTO_TALLA, TALLA
WHERE PRODUCTO_TALLA.ID_TALLA=TALLA.ID AND PRODUCTO_TALLA.ID_PRODUCTO IN(SELECT PRODUCTO.ID FROM PRODUCTO WHERE PRODUCTO.NOMBRE='Falda de porrista')
GROUP BY PRODUCTO_TALLA.STOCK, TALLA.NOMBRE_TALLA

--17. Mostrar los nombres de cada personal y el rol que cumplen
SELECT PERSONAL.NOMBRE, ROL.NOMBRE
FROM PERSONAL, USUARIO, ROL
WHERE PERSONAL.ID=USUARIO.ID_PERSONAL AND USUARIO.ID_ROL=ROL.ID
GROUP BY PERSONAL.NOMBRE, ROL.NOMBRE

--18. Mostrar la suma total del importe comprado al prooveedor 2.
SELECT SUM(DETALLE_NOTACOMPRA.IMPORTE) AS SUMA_TOTAL_DEL_IMPORTE
FROM PROVEEDOR, NOTA_COMPRA, DETALLE_NOTACOMPRA
WHERE PROVEEDOR.ID=NOTA_COMPRA.ID_PROVEEDOR AND NOTA_COMPRA.ID=DETALLE_NOTACOMPRA.ID_NOTACOMPRA AND PROVEEDOR.ID=2

--19. Mostrar la cantidad de productos en Stock cuyo precio es de 100
SELECT SUM(PRODUCTO_TALLA.STOCK) AS CANTIDAD
FROM PRODUCTO,PRODUCTO_TALLA
WHERE PRODUCTO.ID=PRODUCTO_TALLA.ID_PRODUCTO AND PRODUCTO.PRECIO='100';

--20. Mostrar los productos con oferta
SELECT NOMBRE,OFERTA
FROM PRODUCTO
WHERE OFERTA is not null;

--21. mostar el nombre Y TELEFONO del vendedor que atendió al cliente Yuliana Rodriguez
select PERSONAL.NOMBRE, PERSONAL.TELEFONO
from  CLIENTE, NOTA_VENTA, USUARIO, PERSONAL
WHERE CLIENTE.ID = NOTA_VENTA.ID_CLIENTE
AND NOTA_VENTA.ID_USUARIO = USUARIO.ID
AND USUARIO.ID_PERSONAL = PERSONAL.ID
AND CLIENTE.NOMBRE = 'Yuliana Rodriguez';

--22. Mostrar la cantidad de productos de la marca Shein
SELECT SUM(PRODUCTO_TALLA.STOCK)
FROM MARCA, PRODUCTO, PRODUCTO_TALLA
WHERE MARCA.ID=PRODUCTO.ID_MARCA  AND PRODUCTO.ID =PRODUCTO_TALLA.ID_PRODUCTO AND MARCA.NOMBRE='SHEIN';

--23. Mostrar los productos de la marca Shein
SELECT PRODUCTO.ID, PRODUCTO.NOMBRE
FROM MARCA, PRODUCTO
WHERE MARCA.ID=PRODUCTO.ID_MARCA AND MARCA.NOMBRE='FASHION NOVA';

--24. MOSTRAR LA CANTIDAD DE PRODUCTOS DEL MATERIAL JEAN
SELECT SUM(PRODUCTO_TALLA.STOCK)
FROM MATERIAL, PRODUCTO, PRODUCTO_TALLA
WHERE MATERIAL.ID=PRODUCTO.ID_MATERIAL
 AND MATERIAL.NOMBRE='Jean'
 AND PRODUCTO.ID =PRODUCTO_TALLA.ID_PRODUCTO;

--25. MOSTRAR LA CANTIDAD DE PRODUCTOS DE LA CATEGORIA VESTIDOS
 SELECT SUM(PRODUCTO_TALLA.STOCK)
FROM CATEGORIA, PRODUCTO, PRODUCTO_TALLA
WHERE CATEGORIA.ID=PRODUCTO.ID_CATEGORIA
 AND CATEGORIA.NOMBRE='Vestido'
 AND PRODUCTO.ID =PRODUCTO_TALLA.ID_PRODUCTO

--26. Mostrar la cantidad de compras realizadas a cada proveedor
SELECT  PROVEEDOR.NOMBRE,count(ID_PROVEEDOR)
FROM PROVEEDOR, NOTA_COMPRA
WHERE PROVEEDOR.ID=NOTA_COMPRA.ID_PROVEEDOR
GROUP BY PROVEEDOR.NOMBRE;

--27. CUANTAS COMPRAS HIZO la CLIENTE Melody Seña
SELECT CLIENTE.NOMBRE, COUNT(*)
from  CLIENTE , NOTA_VENTA
WHERE CLIENTE.ID = NOTA_VENTA.ID_CLIENTE AND CLIENTE.NOMBRE = 'Melody seña'
group by CLIENTE.NOMBRE

--28. QUE PRODUCTOS A COMPRADO la CLIENTE MELODY SEÑA
SELECT PRODUCTO.NOMBRE
FROM CLIENTE, NOTA_VENTA, PRODUCTO ,DETALLE_NOTAVENTA
WHERE CLIENTE.ID = NOTA_VENTA.ID_CLIENTE
AND DETALLE_NOTAVENTA.ID_NOTAVENTA = NOTA_VENTA.ID
AND DETALLE_NOTAVENTA.ID_PRODUCTO = PRODUCTO.ID
AND CLIENTE.NOMBRE = 'Melody seña';

-- 29. Listar los productos vendidos de talla L
SELECT DISTINCT(PRODUCTO.NOMBRE)
FROM PRODUCTO,PRODUCTO_TALLA,DETALLE_NOTAVENTA,TALLA
WHERE NOMBRE_TALLA='L' AND PRODUCTO.ID = PRODUCTO_TALLA.ID_PRODUCTO AND PRODUCTO_TALLA.ID_TALLA = TALLA.ID AND PRODUCTO_TALLA.ID_TALLA = DETALLE_NOTAVENTA.ID_TALLA ;

SELECT NOMBRE
FROM PRODUCTO
WHERE ID IN( SELECT ID_PRODUCTO
			FROM DETALLE_NOTAVENTA
			WHERE ID_PRODUCTO IN(SELECT ID_PRODUCTO
								FROM PRODUCTO_TALLA
								WHERE ID_TALLA IN(SELECT ID
												FROM TALLA
												WHERE NOMBRE_TALLA = 'L')
								)
);

-- 30. Listar los productos comprados de talla S
SELECT ID,NOMBRE
FROM PRODUCTO
WHERE ID IN( SELECT ID_PRODUCTO
			FROM DETALLE_NOTACOMPRA
			WHERE ID_PRODUCTO IN(SELECT ID_PRODUCTO
								FROM PRODUCTO_TALLA
								WHERE ID_TALLA IN(SELECT ID
												FROM TALLA
												WHERE NOMBRE_TALLA = 'S')
								)
);

-- 31. Listar las tallas disponibles del producto 'Body casual'
SELECT NOMBRE_TALLA,PRODUCTO.NOMBRE
FROM TALLA,PRODUCTO,PRODUCTO_TALLA
WHERE TALLA.ID = PRODUCTO_TALLA.ID_TALLA AND PRODUCTO_TALLA.ID_PRODUCTO= PRODUCTO.ID AND PRODUCTO.NOMBRE = 'Body casual';

-- 32. Listar los PRODUCTOS disponibles de la marca 'SHEIN'
SELECT PRODUCTO.NOMBRE,PRODUCTO.ID
FROM PRODUCTO, MARCA
WHERE PRODUCTO.ID_MARCA = MARCA.ID AND MARCA.NOMBRE = 'SHEIN';

-- 33. Listar la cantidad de los PRODUCTOS con sus TALLAS disponibles de la marca 'SHEIN'
SELECT PRODUCTO.NOMBRE,PRODUCTO_TALLA.STOCK,TALLA.NOMBRE_TALLA
FROM PRODUCTO,MARCA,PRODUCTO_TALLA,TALLA
WHERE PRODUCTO.ID_MARCA = MARCA.ID AND PRODUCTO.ID = PRODUCTO_TALLA.ID_PRODUCTO AND PRODUCTO_TALLA.ID_TALLA = TALLA.ID AND MARCA.NOMBRE = 'SHEIN';

--TRIGGERS
CREATE TRIGGER CANTIDAD_DECOMPRA_AL_STOCK
ON DETALLE_NOTACOMPRA
AFTER INSERT
AS
	DECLARE @cant INT,
			@stock INT,
			@id_producto INT,
			@id_talla INT
	SELECT  @id_producto=ID_PRODUCTO, @id_talla=ID_TALLA, @cant=CANTIDAD FROM INSERTED
	SELECT @stock=STOCK FROM PRODUCTO_TALLA WHERE @id_producto=ID_PRODUCTO AND @id_talla=ID_TALLA
	SET @stock=@stock+@cant
	UPDATE PRODUCTO_TALLA SET STOCK=@stock WHERE ID_PRODUCTO=@id_producto AND ID_TALLA=@id_talla

CREATE TRIGGER ACTUALIZAR_MONTO_TOTAL
ON DETALLE_NOTAVENTA
AFTER INSERT
AS
	DECLARE @total DECIMAL(8,2),
			@monto_pago DECIMAL(8,2),
			@descuento DECIMAL(3,2),
			@monto_total DECIMAL(8,2),
			@nvta INT
	SELECT @nvta=ID_NOTAVENTA, @total=TOTAL FROM INSERTED
	SELECT @monto_pago=MONTO_PAGO, @descuento=DESCUENTO FROM NOTA_VENTA WHERE ID=@nvta
	SET @monto_total= @monto_pago-@monto_pago*@descuento
	UPDATE NOTA_VENTA SET MONTO_TOTAL=@monto_total WHERE ID=@nvta

--PROCEDIMIENTOS ALMACENADOS
SELECT *FROM DETALLE_NOTAVENTA;
--Devuelve la cantidad vendida de un producto en especifico
CREATE PROCEDURE GetCantProducto(@id_producto integer)
AS
BEGIN
   declare @cant integer;
   select @cant = isnull(sum(CANTIDAD),0)
   from DETALLE_NOTAVENTA
   where ID_PRODUCTO=@id_producto
   print @cant;
END
GO

execute dbo.GetCantProducto 5;

--Devuelve la ganancia generada de un producto en especifico
CREATE PROCEDURE GetGantProducto(@id_product integer)
AS
BEGIN
   declare @gan DECIMAL(7,2);
   select @gan = isnull(sum(TOTAL),0)
   from DETALLE_NOTAVENTA
   where ID_PRODUCTO=@id_product
   print @gan;
END
GO

execute dbo.GetGantProducto 3;